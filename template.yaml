AWSTemplateFormatVersion: "2010-09-09"
Transform: AWS::Serverless-2016-10-31
Description: todo-ms-sample

Globals:
    Function:
        Runtime: nodejs12.x
        Timeout: 3

Resources:
    ApiGateway:
        Type: AWS::Serverless::Api
        Properties:
            StageName: Prod
            Cors:
                AllowMethods: "'*'"
                AllowHeaders: "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token'"
                AllowOrigin: "'*'"
    AddTaskFunction:
        Type: AWS::Serverless::Function
        Properties:
            CodeUri: handlers
            Handler: add.handler
            Policies:
                - Statement:
                      - Effect: Allow
                        Action:
                            - dynamodb:*
                        Resource:
                            - !GetAtt TasksTable.Arn
                            - !Sub "${TasksTable.Arn}/index/*"
            Environment:
                Variables:
                    TasksTable: !Ref TasksTable
            Events:
                AddTask:
                    Type: Api
                    Properties:
                        Path: /tasks
                        Method: post
                        RestApiId: !Ref ApiGateway
    GetTaskFunction:
        Type: AWS::Serverless::Function
        Properties:
            CodeUri: handlers
            Handler: get.handler
            Policies:
                - Statement:
                      - Effect: Allow
                        Action:
                            - dynamodb:*
                        Resource:
                            - !GetAtt TasksTable.Arn
                            - !Sub "${TasksTable.Arn}/index/*"
            Environment:
                Variables:
                    TasksTable: !Ref TasksTable
            Events:
                GetTask:
                    Type: Api
                    Properties:
                        Path: /tasks/{id}
                        Method: get
                        RestApiId: !Ref ApiGateway
                GetTaskVersion:
                    Type: Api
                    Properties:
                        Path: /tasks/{id}/{version}
                        Method: get
                        RestApiId: !Ref ApiGateway
    GetTaskHistoryFunction:
        Type: AWS::Serverless::Function
        Properties:
            CodeUri: handlers
            Handler: getHistory.handler
            Policies:
                - Statement:
                      - Effect: Allow
                        Action:
                            - dynamodb:*
                        Resource:
                            - !GetAtt TasksTable.Arn
                            - !Sub "${TasksTable.Arn}/index/*"
            Environment:
                Variables:
                    TasksTable: !Ref TasksTable
            Events:
                GetTask:
                    Type: Api
                    Properties:
                        Path: /tasks/{id}/history
                        Method: get
                        RestApiId: !Ref ApiGateway
    GetSubTasksFunction:
        Type: AWS::Serverless::Function
        Properties:
            CodeUri: handlers
            Handler: getSubTasks.handler
            Policies:
                - Statement:
                      - Effect: Allow
                        Action:
                            - dynamodb:*
                        Resource:
                            - !GetAtt TasksTable.Arn
                            - !Sub "${TasksTable.Arn}/index/*"
            Environment:
                Variables:
                    TasksTable: !Ref TasksTable
            Events:
                GetTask:
                    Type: Api
                    Properties:
                        Path: /tasks/{id}/subtasks
                        Method: get
                        RestApiId: !Ref ApiGateway
    ListTasksFunction:
        Type: AWS::Serverless::Function
        Properties:
            CodeUri: handlers
            Handler: list.handler
            Policies:
                - Statement:
                      - Effect: Allow
                        Action:
                            - dynamodb:*
                        Resource:
                            - !GetAtt TasksTable.Arn
                            - !Sub "${TasksTable.Arn}/index/*"
            Environment:
                Variables:
                    TasksTable: !Ref TasksTable
            Events:
                GetTask:
                    Type: Api
                    Properties:
                        Path: /tasks/status/{status}
                        Method: get
                        RestApiId: !Ref ApiGateway

    ListDueThisMonthFunction:
        Type: AWS::Serverless::Function
        Properties:
            CodeUri: handlers
            Handler: dueThisMonth.handler
            Policies:
                - Statement:
                      - Effect: Allow
                        Action:
                            - dynamodb:*
                        Resource:
                            - !GetAtt TasksTable.Arn
                            - !Sub "${TasksTable.Arn}/index/*"
            Environment:
                Variables:
                    TasksTable: !Ref TasksTable
            Events:
                GetTask:
                    Type: Api
                    Properties:
                        Path: /tasks/due
                        Method: get
                        RestApiId: !Ref ApiGateway

    TasksTable:
        Type: AWS::DynamoDB::Table
        Properties:
            AttributeDefinitions:
                - AttributeName: userid
                  AttributeType: S
                - AttributeName: code
                  AttributeType: S
                - AttributeName: id
                  AttributeType: N
                - AttributeName: taskStatus
                  AttributeType: S
                - AttributeName: taskParent
                  AttributeType: S
                - AttributeName: taskDueDate
                  AttributeType: S
            KeySchema:
                - AttributeName: userid
                  KeyType: HASH
                - AttributeName: code
                  KeyType: RANGE
            LocalSecondaryIndexes:
                - IndexName: IdIndex
                  KeySchema:
                      - AttributeName: userid
                        KeyType: HASH
                      - AttributeName: id
                        KeyType: RANGE
                  Projection:
                      ProjectionType: KEYS_ONLY
                - IndexName: StatusIndex
                  KeySchema:
                      - AttributeName: userid
                        KeyType: HASH
                      - AttributeName: taskStatus
                        KeyType: RANGE
                  Projection:
                      ProjectionType: ALL
                - IndexName: ParentIndex
                  KeySchema:
                      - AttributeName: userid
                        KeyType: HASH
                      - AttributeName: taskParent
                        KeyType: RANGE
                  Projection:
                      ProjectionType: ALL
                - IndexName: DueDateIndex
                  KeySchema:
                      - AttributeName: userid
                        KeyType: HASH
                      - AttributeName: taskDueDate
                        KeyType: RANGE
                  Projection:
                      ProjectionType: ALL
            ProvisionedThroughput:
                ReadCapacityUnits: 5
                WriteCapacityUnits: 5
Outputs:
    APIUrl:
        Description: todo-sample API URL
        Value: !Join
            - ""
            - - https://
              - !Ref ApiGateway
              - ".execute-api."
              - !Ref AWS::Region
              - ".amazonaws.com/prod/"
